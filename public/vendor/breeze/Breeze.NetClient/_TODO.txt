Already supported
-----------------
All Server queries including
   Where/Skip/Take/OrderBy
   Expand/Select
   InlineCount
   Client side anon projections
   Server side anon projections
   NamedQueries
Saves - including Named Saves
Change tracking/Accept-RejectChanges/OriginalValuesMap
Interfaces implemented for INotifyPropertyChanged, IEditableObject, IChangeTracking, IRevertibleChangeTracking
ComplexTypes
Automatic Entity graph attachment - 
TempKey generation and fk fixup on Saves and Imports
Emport/Import to stream/string
EntityManager events - EntityChanging/EntityChanged/HasChangesChanged 
Live navigation collections
Full Metadata 
MergeStrategy 

ToDo
---------------------------
LocalQuery
Registered EntityInitializers - ??? public empty ctors;
Validation and INotifyDataErrorInfo
ChangeNotificationEnabled
LoadNavigationProperty
Inheritance
NoTracking queries
UntrackedProperties added directly to Clr type defs.
CodeGeneration - 
Metadata by hand 
CustomMetadata

Notes: 
	- EntityAspect EntityManager & EntityGroup properties are set if an entity was ever attached. 
	This is not cleared when an entity is detached.  This assumption removes a lot of special purpose logic
	- Only the MetadataStore and immutable types are ThreadSafe.  Any property returned by the MetadataStore 
	must therefore also be either immutable or thread safe itself. (all StructuralTypes are effectively immutable)

Think about
-------------
Abiltity to configure clr namespace mapping - server name: Foo.Customer - client name: Bar.Cust
A Breeze specific Http exception that include both a status code and a message.
Enum for flags like InProcess, IsLoading etc ( probably not a good idea for booleans that have a concept of inheritance)
Test the incoming Metadata to insure that it matches the Clr descriptions.
If moving MetadataInfo from .NET to JS and back NamingConventions are likely not compatible - so what do we do ???
ShortName map
NullEntity


Extensions for later ( that we can charge for)
--------------------------------------------
Property interception
PostSharp (or other static IL weaver support)
Query filters (like devforce - registered on the EntityManager and applied to queries before execution)
GetEntityGraph
EntityQueryPager
Logging/Tracing
Dynamic linq
DesignTime functionality ???
Silverlight 5 ( ??? )
Enhanced validation
Enhanced offline
Linq verbs not natively supported by OData (hard)
MEF???




